# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Keylightd < Formula
  desc "Daemon and CLI tool for managing Elgato Key Lights on your local network"
  homepage "https://github.com/jmylchreest/keylightd"
  version "0.0.8"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/jmylchreest/keylightd/releases/download/v0.0.8/keylightd_0.0.8_darwin_amd64.tar.gz"
      sha256 "553fcd2bf8f17f08a532936ba9c3c6b4a53ca4b04e27103d230a52bb6e170668"

      def install
        bin.install "keylightd"
        bin.install "keylightctl"

        # Install systemd service file for Linux users
        if OS.linux?
          (etc/"systemd/user").mkpath
          (etc/"systemd/user").install "contrib/systemd/keylightd.service"
        end

        # Make service file available on all platforms for reference
        (share/"keylightd").mkpath
        (share/"keylightd").install "contrib/systemd/keylightd.service"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/jmylchreest/keylightd/releases/download/v0.0.8/keylightd_0.0.8_darwin_arm64.tar.gz"
      sha256 "2afe8004e399e4adfa37cb2788ad0fe460526abec04f6d3e23690db57c37b151"

      def install
        bin.install "keylightd"
        bin.install "keylightctl"

        # Install systemd service file for Linux users
        if OS.linux?
          (etc/"systemd/user").mkpath
          (etc/"systemd/user").install "contrib/systemd/keylightd.service"
        end

        # Make service file available on all platforms for reference
        (share/"keylightd").mkpath
        (share/"keylightd").install "contrib/systemd/keylightd.service"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/jmylchreest/keylightd/releases/download/v0.0.8/keylightd_0.0.8_linux_amd64.tar.gz"
      sha256 "b02fa6441cf7aeffaf6be60ea268baf363df6b6fb1128b41f3c835e81c72d70e"
      def install
        bin.install "keylightd"
        bin.install "keylightctl"

        # Install systemd service file for Linux users
        if OS.linux?
          (etc/"systemd/user").mkpath
          (etc/"systemd/user").install "contrib/systemd/keylightd.service"
        end

        # Make service file available on all platforms for reference
        (share/"keylightd").mkpath
        (share/"keylightd").install "contrib/systemd/keylightd.service"
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/jmylchreest/keylightd/releases/download/v0.0.8/keylightd_0.0.8_linux_arm64.tar.gz"
      sha256 "1cc88f7120218a9e5d8c753e52ad67ce2830e2e85e85e20b0c0c790270140b19"
      def install
        bin.install "keylightd"
        bin.install "keylightctl"

        # Install systemd service file for Linux users
        if OS.linux?
          (etc/"systemd/user").mkpath
          (etc/"systemd/user").install "contrib/systemd/keylightd.service"
        end

        # Make service file available on all platforms for reference
        (share/"keylightd").mkpath
        (share/"keylightd").install "contrib/systemd/keylightd.service"
      end
    end
  end

  def caveats
    <<~EOS
      keylightd daemon has been installed!

      To start keylightd manually:
        keylightd

      To start automatically on boot:

      On Linux with systemd:
        systemctl --user enable keylightd
        systemctl --user start keylightd

        Service file installed to: #{HOMEBREW_PREFIX}/etc/systemd/user/keylightd.service

      On macOS (using launchd):
        # Manual background start:
        keylightd &

        # Or create your own launchd plist in ~/Library/LaunchAgents/

      Once started, control your lights with:
        keylightctl light list
        keylightctl --help

      Configuration will be created at: ~/.config/keylight/
    EOS
  end

  test do
    system "#{bin}/keylightd", "-h"
    system "#{bin}/keylightctl", "version"
  end
end
